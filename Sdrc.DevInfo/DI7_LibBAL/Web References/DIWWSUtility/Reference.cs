//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace DevInfo.Lib.DI_LibBAL.DIWWSUtility {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UtilitySoap", Namespace="http://DIworldwide/DIWWS/")]
    public partial class Utility : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCountryListValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterAllUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCountryFactInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateKMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCountryAdaptationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAdaptationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdaptationCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOnlineUserCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActivationCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateStatsHTMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDIFTPInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSDMXRegistryURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDatabaseDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValueByKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExtractShapeInfoXMLOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Utility() {
            this.Url = global::DevInfo.Lib.DI_LibBAL.Properties.Settings.Default.DI_LibBAL_DIWWSUtility_Utility;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCountryListValuesCompletedEventHandler GetCountryListValuesCompleted;
        
        /// <remarks/>
        public event RegisterAllUserCompletedEventHandler RegisterAllUserCompleted;
        
        /// <remarks/>
        public event UpdateCountryFactInfoCompletedEventHandler UpdateCountryFactInfoCompleted;
        
        /// <remarks/>
        public event GenerateKMLCompletedEventHandler GenerateKMLCompleted;
        
        /// <remarks/>
        public event CreateCountryCompletedEventHandler CreateCountryCompleted;
        
        /// <remarks/>
        public event CreateCountryAdaptationCompletedEventHandler CreateCountryAdaptationCompleted;
        
        /// <remarks/>
        public event CreateAdaptationCompletedEventHandler CreateAdaptationCompleted;
        
        /// <remarks/>
        public event GetAdaptationCountCompletedEventHandler GetAdaptationCountCompleted;
        
        /// <remarks/>
        public event GetOnlineUserCountCompletedEventHandler GetOnlineUserCountCompleted;
        
        /// <remarks/>
        public event GetActivationCountCompletedEventHandler GetActivationCountCompleted;
        
        /// <remarks/>
        public event GenerateStatsHTMLCompletedEventHandler GenerateStatsHTMLCompleted;
        
        /// <remarks/>
        public event GetDIFTPInfoCompletedEventHandler GetDIFTPInfoCompleted;
        
        /// <remarks/>
        public event GetSDMXRegistryURLCompletedEventHandler GetSDMXRegistryURLCompleted;
        
        /// <remarks/>
        public event GetDatabaseDetailsCompletedEventHandler GetDatabaseDetailsCompleted;
        
        /// <remarks/>
        public event GetValueByKeyCompletedEventHandler GetValueByKeyCompleted;
        
        /// <remarks/>
        public event ExtractShapeInfoXMLCompletedEventHandler ExtractShapeInfoXMLCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://DIworldwide/DIWWS/GetCountryListValues", RequestNamespace="http://DIworldwide/DIWWS/", ResponseNamespace="http://DIworldwide/DIWWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCountryListValues() {
            object[] results = this.Invoke("GetCountryListValues", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountryListValuesAsync() {
            this.GetCountryListValuesAsync(null);
        }
        
        /// <remarks/>
        public void GetCountryListValuesAsync(object userState) {
            if ((this.GetCountryListValuesOperationCompleted == null)) {
                this.GetCountryListValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountryListValuesOperationCompleted);
            }
            this.InvokeAsync("GetCountryListValues", new object[0], this.GetCountryListValuesOperationCompleted, userState);
        }
        
        private void OnGetCountryListValuesOperationCompleted(object arg) {
            if ((this.GetCountryListValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountryListValuesCompleted(this, new GetCountryListValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://DIworldwide/DIWWS/RegisterAllUser", RequestNamespace="http://DIworldwide/DIWWS/", ResponseNamespace="http://DIworldwide/DIWWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RegisterAllUser(string userName, string email, string password, string organization, string country, string firstName, string lastName, string contactDetails, string type) {
            object[] results = this.Invoke("RegisterAllUser", new object[] {
                        userName,
                        email,
                        password,
                        organization,
                        country,
                        firstName,
                        lastName,
                        contactDetails,
                        type});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterAllUserAsync(string userName, string email, string password, string organization, string country, string firstName, string lastName, string contactDetails, string type) {
            this.RegisterAllUserAsync(userName, email, password, organization, country, firstName, lastName, contactDetails, type, null);
        }
        
        /// <remarks/>
        public void RegisterAllUserAsync(string userName, string email, string password, string organization, string country, string firstName, string lastName, string contactDetails, string type, object userState) {
            if ((this.RegisterAllUserOperationCompleted == null)) {
                this.RegisterAllUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterAllUserOperationCompleted);
            }
            this.InvokeAsync("RegisterAllUser", new object[] {
                        userName,
                        email,
                        password,
                        organization,
                        country,
                        firstName,
                        lastName,
                        contactDetails,
                        type}, this.RegisterAllUserOperationCompleted, userState);
        }
        
        private void OnRegisterAllUserOperationCompleted(object arg) {
            if ((this.RegisterAllUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterAllUserCompleted(this, new RegisterAllUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://DIworldwide/DIWWS/UpdateCountryFactInfo", RequestNamespace="http://DIworldwide/DIWWS/", ResponseNamespace="http://DIworldwide/DIWWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateCountryFactInfo(string countryName, string FocalPoint, string FocalPointEmail, string ImplementingAgency, string HomepageURL, string Databases, string Website, string LastUpdated, string countryFactSheetURL) {
            object[] results = this.Invoke("UpdateCountryFactInfo", new object[] {
                        countryName,
                        FocalPoint,
                        FocalPointEmail,
                        ImplementingAgency,
                        HomepageURL,
                        Databases,
                        Website,
                        LastUpdated,
                        countryFactSheetURL});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCountryFactInfoAsync(string countryName, string FocalPoint, string FocalPointEmail, string ImplementingAgency, string HomepageURL, string Databases, string Website, string LastUpdated, string countryFactSheetURL) {
            this.UpdateCountryFactInfoAsync(countryName, FocalPoint, FocalPointEmail, ImplementingAgency, HomepageURL, Databases, Website, LastUpdated, countryFactSheetURL, null);
        }
        
        /// <remarks/>
        public void UpdateCountryFactInfoAsync(string countryName, string FocalPoint, string FocalPointEmail, string ImplementingAgency, string HomepageURL, string Databases, string Website, string LastUpdated, string countryFactSheetURL, object userState) {
            if ((this.UpdateCountryFactInfoOperationCompleted == null)) {
                this.UpdateCountryFactInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCountryFactInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateCountryFactInfo", new object[] {
                        countryName,
                        FocalPoint,
                        FocalPointEmail,
                        ImplementingAgency,
                        HomepageURL,
                        Databases,
                        Website,
                        LastUpdated,
                        countryFactSheetURL}, this.UpdateCountryFactInfoOperationCompleted, userState);
        }
        
        private void OnUpdateCountryFactInfoOperationCompleted(object arg) {
            if ((this.UpdateCountryFactInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCountryFactInfoCompleted(this, new UpdateCountryFactInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://DIworldwide/DIWWS/GenerateKML", RequestNamespace="http://DIworldwide/DIWWS/", ResponseNamespace="http://DIworldwide/DIWWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object GenerateKML(string KMLType) {
            object[] results = this.Invoke("GenerateKML", new object[] {
                        KMLType});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateKMLAsync(string KMLType) {
            this.GenerateKMLAsync(KMLType, null);
        }
        
        /// <remarks/>
        public void GenerateKMLAsync(string KMLType, object userState) {
            if ((this.GenerateKMLOperationCompleted == null)) {
                this.GenerateKMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateKMLOperationCompleted);
            }
            this.InvokeAsync("GenerateKML", new object[] {
                        KMLType}, this.GenerateKMLOperationCompleted, userState);
        }
        
        private void OnGenerateKMLOperationCompleted(object arg) {
            if ((this.GenerateKMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateKMLCompleted(this, new GenerateKMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://DIworldwide/DIWWS/CreateCountry", RequestNamespace="http://DIworldwide/DIWWS/", ResponseNamespace="http://DIworldwide/DIWWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object CreateCountry(string Country_Name, string Country_ID, string Longitude, string Latitude, string CountryFlag_URL, string CountryFactSheet_URL) {
            object[] results = this.Invoke("CreateCountry", new object[] {
                        Country_Name,
                        Country_ID,
                        Longitude,
                        Latitude,
                        CountryFlag_URL,
                        CountryFactSheet_URL});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCountryAsync(string Country_Name, string Country_ID, string Longitude, string Latitude, string CountryFlag_URL, string CountryFactSheet_URL) {
            this.CreateCountryAsync(Country_Name, Country_ID, Longitude, Latitude, CountryFlag_URL, CountryFactSheet_URL, null);
        }
        
        /// <remarks/>
        public void CreateCountryAsync(string Country_Name, string Country_ID, string Longitude, string Latitude, string CountryFlag_URL, string CountryFactSheet_URL, object userState) {
            if ((this.CreateCountryOperationCompleted == null)) {
                this.CreateCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCountryOperationCompleted);
            }
            this.InvokeAsync("CreateCountry", new object[] {
                        Country_Name,
                        Country_ID,
                        Longitude,
                        Latitude,
                        CountryFlag_URL,
                        CountryFactSheet_URL}, this.CreateCountryOperationCompleted, userState);
        }
        
        private void OnCreateCountryOperationCompleted(object arg) {
            if ((this.CreateCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCountryCompleted(this, new CreateCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://DIworldwide/DIWWS/CreateCountryAdaptation", RequestNamespace="http://DIworldwide/DIWWS/", ResponseNamespace="http://DIworldwide/DIWWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object CreateCountryAdaptation(string CountryName, string AdaptationName, string AdaptationVersion, string FocalPoint, string FocalPointEmail, string ImplementingAgency, string HomepageURL, string Databases, string Website, string LastUpdated) {
            object[] results = this.Invoke("CreateCountryAdaptation", new object[] {
                        CountryName,
                        AdaptationName,
                        AdaptationVersion,
                        FocalPoint,
                        FocalPointEmail,
                        ImplementingAgency,
                        HomepageURL,
                        Databases,
                        Website,
                        LastUpdated});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCountryAdaptationAsync(string CountryName, string AdaptationName, string AdaptationVersion, string FocalPoint, string FocalPointEmail, string ImplementingAgency, string HomepageURL, string Databases, string Website, string LastUpdated) {
            this.CreateCountryAdaptationAsync(CountryName, AdaptationName, AdaptationVersion, FocalPoint, FocalPointEmail, ImplementingAgency, HomepageURL, Databases, Website, LastUpdated, null);
        }
        
        /// <remarks/>
        public void CreateCountryAdaptationAsync(string CountryName, string AdaptationName, string AdaptationVersion, string FocalPoint, string FocalPointEmail, string ImplementingAgency, string HomepageURL, string Databases, string Website, string LastUpdated, object userState) {
            if ((this.CreateCountryAdaptationOperationCompleted == null)) {
                this.CreateCountryAdaptationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCountryAdaptationOperationCompleted);
            }
            this.InvokeAsync("CreateCountryAdaptation", new object[] {
                        CountryName,
                        AdaptationName,
                        AdaptationVersion,
                        FocalPoint,
                        FocalPointEmail,
                        ImplementingAgency,
                        HomepageURL,
                        Databases,
                        Website,
                        LastUpdated}, this.CreateCountryAdaptationOperationCompleted, userState);
        }
        
        private void OnCreateCountryAdaptationOperationCompleted(object arg) {
            if ((this.CreateCountryAdaptationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCountryAdaptationCompleted(this, new CreateCountryAdaptationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://DIworldwide/DIWWS/CreateAdaptation", RequestNamespace="http://DIworldwide/DIWWS/", ResponseNamespace="http://DIworldwide/DIWWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object CreateAdaptation(string Adaptation_Name, string Adaptation_Ver) {
            object[] results = this.Invoke("CreateAdaptation", new object[] {
                        Adaptation_Name,
                        Adaptation_Ver});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAdaptationAsync(string Adaptation_Name, string Adaptation_Ver) {
            this.CreateAdaptationAsync(Adaptation_Name, Adaptation_Ver, null);
        }
        
        /// <remarks/>
        public void CreateAdaptationAsync(string Adaptation_Name, string Adaptation_Ver, object userState) {
            if ((this.CreateAdaptationOperationCompleted == null)) {
                this.CreateAdaptationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAdaptationOperationCompleted);
            }
            this.InvokeAsync("CreateAdaptation", new object[] {
                        Adaptation_Name,
                        Adaptation_Ver}, this.CreateAdaptationOperationCompleted, userState);
        }
        
        private void OnCreateAdaptationOperationCompleted(object arg) {
            if ((this.CreateAdaptationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAdaptationCompleted(this, new CreateAdaptationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://DIworldwide/DIWWS/GetAdaptationCount", RequestNamespace="http://DIworldwide/DIWWS/", ResponseNamespace="http://DIworldwide/DIWWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAdaptationCount() {
            object[] results = this.Invoke("GetAdaptationCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdaptationCountAsync() {
            this.GetAdaptationCountAsync(null);
        }
        
        /// <remarks/>
        public void GetAdaptationCountAsync(object userState) {
            if ((this.GetAdaptationCountOperationCompleted == null)) {
                this.GetAdaptationCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdaptationCountOperationCompleted);
            }
            this.InvokeAsync("GetAdaptationCount", new object[0], this.GetAdaptationCountOperationCompleted, userState);
        }
        
        private void OnGetAdaptationCountOperationCompleted(object arg) {
            if ((this.GetAdaptationCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdaptationCountCompleted(this, new GetAdaptationCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://DIworldwide/DIWWS/GetOnlineUserCount", RequestNamespace="http://DIworldwide/DIWWS/", ResponseNamespace="http://DIworldwide/DIWWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOnlineUserCount() {
            object[] results = this.Invoke("GetOnlineUserCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOnlineUserCountAsync() {
            this.GetOnlineUserCountAsync(null);
        }
        
        /// <remarks/>
        public void GetOnlineUserCountAsync(object userState) {
            if ((this.GetOnlineUserCountOperationCompleted == null)) {
                this.GetOnlineUserCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOnlineUserCountOperationCompleted);
            }
            this.InvokeAsync("GetOnlineUserCount", new object[0], this.GetOnlineUserCountOperationCompleted, userState);
        }
        
        private void OnGetOnlineUserCountOperationCompleted(object arg) {
            if ((this.GetOnlineUserCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOnlineUserCountCompleted(this, new GetOnlineUserCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://DIworldwide/DIWWS/GetActivationCount", RequestNamespace="http://DIworldwide/DIWWS/", ResponseNamespace="http://DIworldwide/DIWWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetActivationCount() {
            object[] results = this.Invoke("GetActivationCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetActivationCountAsync() {
            this.GetActivationCountAsync(null);
        }
        
        /// <remarks/>
        public void GetActivationCountAsync(object userState) {
            if ((this.GetActivationCountOperationCompleted == null)) {
                this.GetActivationCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActivationCountOperationCompleted);
            }
            this.InvokeAsync("GetActivationCount", new object[0], this.GetActivationCountOperationCompleted, userState);
        }
        
        private void OnGetActivationCountOperationCompleted(object arg) {
            if ((this.GetActivationCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActivationCountCompleted(this, new GetActivationCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://DIworldwide/DIWWS/GenerateStatsHTML", RequestNamespace="http://DIworldwide/DIWWS/", ResponseNamespace="http://DIworldwide/DIWWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object GenerateStatsHTML() {
            object[] results = this.Invoke("GenerateStatsHTML", new object[0]);
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateStatsHTMLAsync() {
            this.GenerateStatsHTMLAsync(null);
        }
        
        /// <remarks/>
        public void GenerateStatsHTMLAsync(object userState) {
            if ((this.GenerateStatsHTMLOperationCompleted == null)) {
                this.GenerateStatsHTMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateStatsHTMLOperationCompleted);
            }
            this.InvokeAsync("GenerateStatsHTML", new object[0], this.GenerateStatsHTMLOperationCompleted, userState);
        }
        
        private void OnGenerateStatsHTMLOperationCompleted(object arg) {
            if ((this.GenerateStatsHTMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateStatsHTMLCompleted(this, new GenerateStatsHTMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://DIworldwide/DIWWS/GetDIFTPInfo", RequestNamespace="http://DIworldwide/DIWWS/", ResponseNamespace="http://DIworldwide/DIWWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FTPReturnObject GetDIFTPInfo(string FTPType) {
            object[] results = this.Invoke("GetDIFTPInfo", new object[] {
                        FTPType});
            return ((FTPReturnObject)(results[0]));
        }
        
        /// <remarks/>
        public void GetDIFTPInfoAsync(string FTPType) {
            this.GetDIFTPInfoAsync(FTPType, null);
        }
        
        /// <remarks/>
        public void GetDIFTPInfoAsync(string FTPType, object userState) {
            if ((this.GetDIFTPInfoOperationCompleted == null)) {
                this.GetDIFTPInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDIFTPInfoOperationCompleted);
            }
            this.InvokeAsync("GetDIFTPInfo", new object[] {
                        FTPType}, this.GetDIFTPInfoOperationCompleted, userState);
        }
        
        private void OnGetDIFTPInfoOperationCompleted(object arg) {
            if ((this.GetDIFTPInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDIFTPInfoCompleted(this, new GetDIFTPInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://DIworldwide/DIWWS/GetSDMXRegistryURL", RequestNamespace="http://DIworldwide/DIWWS/", ResponseNamespace="http://DIworldwide/DIWWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSDMXRegistryURL() {
            object[] results = this.Invoke("GetSDMXRegistryURL", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSDMXRegistryURLAsync() {
            this.GetSDMXRegistryURLAsync(null);
        }
        
        /// <remarks/>
        public void GetSDMXRegistryURLAsync(object userState) {
            if ((this.GetSDMXRegistryURLOperationCompleted == null)) {
                this.GetSDMXRegistryURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSDMXRegistryURLOperationCompleted);
            }
            this.InvokeAsync("GetSDMXRegistryURL", new object[0], this.GetSDMXRegistryURLOperationCompleted, userState);
        }
        
        private void OnGetSDMXRegistryURLOperationCompleted(object arg) {
            if ((this.GetSDMXRegistryURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSDMXRegistryURLCompleted(this, new GetSDMXRegistryURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://DIworldwide/DIWWS/GetDatabaseDetails", RequestNamespace="http://DIworldwide/DIWWS/", ResponseNamespace="http://DIworldwide/DIWWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DbDetailsReturnObject GetDatabaseDetails(string DBType) {
            object[] results = this.Invoke("GetDatabaseDetails", new object[] {
                        DBType});
            return ((DbDetailsReturnObject)(results[0]));
        }
        
        /// <remarks/>
        public void GetDatabaseDetailsAsync(string DBType) {
            this.GetDatabaseDetailsAsync(DBType, null);
        }
        
        /// <remarks/>
        public void GetDatabaseDetailsAsync(string DBType, object userState) {
            if ((this.GetDatabaseDetailsOperationCompleted == null)) {
                this.GetDatabaseDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDatabaseDetailsOperationCompleted);
            }
            this.InvokeAsync("GetDatabaseDetails", new object[] {
                        DBType}, this.GetDatabaseDetailsOperationCompleted, userState);
        }
        
        private void OnGetDatabaseDetailsOperationCompleted(object arg) {
            if ((this.GetDatabaseDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDatabaseDetailsCompleted(this, new GetDatabaseDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://DIworldwide/DIWWS/GetValueByKey", RequestNamespace="http://DIworldwide/DIWWS/", ResponseNamespace="http://DIworldwide/DIWWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetValueByKey(string key) {
            object[] results = this.Invoke("GetValueByKey", new object[] {
                        key});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetValueByKeyAsync(string key) {
            this.GetValueByKeyAsync(key, null);
        }
        
        /// <remarks/>
        public void GetValueByKeyAsync(string key, object userState) {
            if ((this.GetValueByKeyOperationCompleted == null)) {
                this.GetValueByKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValueByKeyOperationCompleted);
            }
            this.InvokeAsync("GetValueByKey", new object[] {
                        key}, this.GetValueByKeyOperationCompleted, userState);
        }
        
        private void OnGetValueByKeyOperationCompleted(object arg) {
            if ((this.GetValueByKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValueByKeyCompleted(this, new GetValueByKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://DIworldwide/DIWWS/ExtractShapeInfoXML", RequestNamespace="http://DIworldwide/DIWWS/", ResponseNamespace="http://DIworldwide/DIWWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExtractShapeInfoXML(string databaseServerPath, string outputServerPath, string tempServerFolder) {
            object[] results = this.Invoke("ExtractShapeInfoXML", new object[] {
                        databaseServerPath,
                        outputServerPath,
                        tempServerFolder});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExtractShapeInfoXMLAsync(string databaseServerPath, string outputServerPath, string tempServerFolder) {
            this.ExtractShapeInfoXMLAsync(databaseServerPath, outputServerPath, tempServerFolder, null);
        }
        
        /// <remarks/>
        public void ExtractShapeInfoXMLAsync(string databaseServerPath, string outputServerPath, string tempServerFolder, object userState) {
            if ((this.ExtractShapeInfoXMLOperationCompleted == null)) {
                this.ExtractShapeInfoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExtractShapeInfoXMLOperationCompleted);
            }
            this.InvokeAsync("ExtractShapeInfoXML", new object[] {
                        databaseServerPath,
                        outputServerPath,
                        tempServerFolder}, this.ExtractShapeInfoXMLOperationCompleted, userState);
        }
        
        private void OnExtractShapeInfoXMLOperationCompleted(object arg) {
            if ((this.ExtractShapeInfoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExtractShapeInfoXMLCompleted(this, new ExtractShapeInfoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://DIworldwide/DIWWS/")]
    public partial class DbDetailsReturnObject {
        
        private string serverTypeField;
        
        private string portNumberField;
        
        private string databaseNameField;
        
        private string userIdField;
        
        private string passwordField;
        
        /// <remarks/>
        public string ServerType {
            get {
                return this.serverTypeField;
            }
            set {
                this.serverTypeField = value;
            }
        }
        
        /// <remarks/>
        public string PortNumber {
            get {
                return this.portNumberField;
            }
            set {
                this.portNumberField = value;
            }
        }
        
        /// <remarks/>
        public string DatabaseName {
            get {
                return this.databaseNameField;
            }
            set {
                this.databaseNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://DIworldwide/DIWWS/")]
    public partial class FTPReturnObject {
        
        private string fTPHostField;
        
        private string fTPUserNameField;
        
        private string fTPPasswordField;
        
        private string fTPDirectoryField;
        
        /// <remarks/>
        public string FTPHost {
            get {
                return this.fTPHostField;
            }
            set {
                this.fTPHostField = value;
            }
        }
        
        /// <remarks/>
        public string FTPUserName {
            get {
                return this.fTPUserNameField;
            }
            set {
                this.fTPUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string FTPPassword {
            get {
                return this.fTPPasswordField;
            }
            set {
                this.fTPPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string FTPDirectory {
            get {
                return this.fTPDirectoryField;
            }
            set {
                this.fTPDirectoryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCountryListValuesCompletedEventHandler(object sender, GetCountryListValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountryListValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountryListValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RegisterAllUserCompletedEventHandler(object sender, RegisterAllUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterAllUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterAllUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateCountryFactInfoCompletedEventHandler(object sender, UpdateCountryFactInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCountryFactInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCountryFactInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GenerateKMLCompletedEventHandler(object sender, GenerateKMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateKMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateKMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateCountryCompletedEventHandler(object sender, CreateCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateCountryAdaptationCompletedEventHandler(object sender, CreateCountryAdaptationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCountryAdaptationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCountryAdaptationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateAdaptationCompletedEventHandler(object sender, CreateAdaptationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAdaptationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAdaptationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAdaptationCountCompletedEventHandler(object sender, GetAdaptationCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdaptationCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdaptationCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOnlineUserCountCompletedEventHandler(object sender, GetOnlineUserCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOnlineUserCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOnlineUserCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetActivationCountCompletedEventHandler(object sender, GetActivationCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActivationCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActivationCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GenerateStatsHTMLCompletedEventHandler(object sender, GenerateStatsHTMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateStatsHTMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateStatsHTMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDIFTPInfoCompletedEventHandler(object sender, GetDIFTPInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDIFTPInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDIFTPInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FTPReturnObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FTPReturnObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSDMXRegistryURLCompletedEventHandler(object sender, GetSDMXRegistryURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSDMXRegistryURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSDMXRegistryURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDatabaseDetailsCompletedEventHandler(object sender, GetDatabaseDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDatabaseDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDatabaseDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DbDetailsReturnObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DbDetailsReturnObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetValueByKeyCompletedEventHandler(object sender, GetValueByKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValueByKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValueByKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ExtractShapeInfoXMLCompletedEventHandler(object sender, ExtractShapeInfoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExtractShapeInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExtractShapeInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591